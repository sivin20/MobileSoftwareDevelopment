{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, StackActions } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n\nuseEffect(function () {\n  fetchMovies();\n}, []);\n\nfunction fetchMovies() {\n  fetch(\"https://jsonplaceholder.typicode.com/todos/\").then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return setData(data.results);\n  });\n}\n\nexport default function SecondScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Second Screen\"\n    }), _jsx(Button, {\n      title: \"Go Home\",\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","NavigationContainer","StackActions","createNativeStackNavigator","useEffect","useState","data","setData","fetchMovies","fetch","then","response","json","results","SecondScreen","navigation","flex","alignItems","justifyContent","navigate","styles","StyleSheet","create","container","backgroundColor"],"sources":["/home/sigurd/School/5sem/msd/react/MovieDatabaseApp/SecondScreen.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport {NavigationContainer, StackActions} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useEffect, useState } from 'react';\n\nconst [data, setData] = useState([]);\n\nuseEffect(() => {\n  fetchMovies();\n}, []);\n\nfunction fetchMovies() {\n  fetch(\n    \"https://jsonplaceholder.typicode.com/todos/\"\n  )\n  .then((response) => response.json())\n  .then((data) => setData(data.results));\n}\n\nexport default function SecondScreen({navigation}) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>\n            Second Screen\n        </Text>\n        <Button\n            title=\"Go Home\"\n            onPress={() => navigation.navigate('Home')}\n          />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;AAEA,SAAQC,mBAAR,EAA6BC,YAA7B,QAAgD,0BAAhD;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,gBAAwBA,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,IAAOC,IAAP;AAAA,IAAaC,OAAb;;AAEAH,SAAS,CAAC,YAAM;EACdI,WAAW;AACZ,CAFQ,EAEN,EAFM,CAAT;;AAIA,SAASA,WAAT,GAAuB;EACrBC,KAAK,CACH,6CADG,CAAL,CAGCC,IAHD,CAGM,UAACC,QAAD;IAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;EAAA,CAHN,EAICF,IAJD,CAIM,UAACJ,IAAD;IAAA,OAAUC,OAAO,CAACD,IAAI,CAACO,OAAN,CAAjB;EAAA,CAJN;AAKD;;AAED,eAAe,SAASC,YAAT,OAAoC;EAAA,IAAbC,UAAa,QAAbA,UAAa;EACjD,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CAAb;IAAA,WACI,KAAC,IAAD;MAAA;IAAA,EADJ,EAII,KAAC,MAAD;MACI,KAAK,EAAC,SADV;MAEI,OAAO,EAAE;QAAA,OAAMH,UAAU,CAACI,QAAX,CAAoB,MAApB,CAAN;MAAA;IAFb,EAJJ;EAAA,EADF;AAWD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTP,IAAI,EAAE,CADG;IAETQ,eAAe,EAAE,MAFR;IAGTP,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}